// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: point_cloud.proto

#ifndef PROTOBUF_point_5fcloud_2eproto__INCLUDED
#define PROTOBUF_point_5fcloud_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "point_type.pb.h"
// @@protoc_insertion_point(includes)

namespace pcl {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_point_5fcloud_2eproto();
void protobuf_AssignDesc_point_5fcloud_2eproto();
void protobuf_ShutdownFile_point_5fcloud_2eproto();

class PointCloud;
class PointCloudXYZL;

// ===================================================================

class PointCloud : public ::google::protobuf::Message {
 public:
  PointCloud();
  virtual ~PointCloud();

  PointCloud(const PointCloud& from);

  inline PointCloud& operator=(const PointCloud& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointCloud& default_instance();

  void Swap(PointCloud* other);

  // implements Message ----------------------------------------------

  PointCloud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointCloud& from);
  void MergeFrom(const PointCloud& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::uint32 width() const;
  inline void set_width(::google::protobuf::uint32 value);

  // required uint32 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::uint32 height() const;
  inline void set_height(::google::protobuf::uint32 value);

  // required bool is_dense = 3;
  inline bool has_is_dense() const;
  inline void clear_is_dense();
  static const int kIsDenseFieldNumber = 3;
  inline bool is_dense() const;
  inline void set_is_dense(bool value);

  // repeated .pcl.msgs.PointXYZ points = 4;
  inline int points_size() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 4;
  inline const ::pcl::msgs::PointXYZ& points(int index) const;
  inline ::pcl::msgs::PointXYZ* mutable_points(int index);
  inline ::pcl::msgs::PointXYZ* add_points();
  inline const ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZ >&
      points() const;
  inline ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZ >*
      mutable_points();

  // @@protoc_insertion_point(class_scope:pcl.msgs.PointCloud)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_is_dense();
  inline void clear_has_is_dense();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZ > points_;
  bool is_dense_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_point_5fcloud_2eproto();
  friend void protobuf_AssignDesc_point_5fcloud_2eproto();
  friend void protobuf_ShutdownFile_point_5fcloud_2eproto();

  void InitAsDefaultInstance();
  static PointCloud* default_instance_;
};
// -------------------------------------------------------------------

class PointCloudXYZL : public ::google::protobuf::Message {
 public:
  PointCloudXYZL();
  virtual ~PointCloudXYZL();

  PointCloudXYZL(const PointCloudXYZL& from);

  inline PointCloudXYZL& operator=(const PointCloudXYZL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointCloudXYZL& default_instance();

  void Swap(PointCloudXYZL* other);

  // implements Message ----------------------------------------------

  PointCloudXYZL* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointCloudXYZL& from);
  void MergeFrom(const PointCloudXYZL& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::uint32 width() const;
  inline void set_width(::google::protobuf::uint32 value);

  // required uint32 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::uint32 height() const;
  inline void set_height(::google::protobuf::uint32 value);

  // required bool is_dense = 3;
  inline bool has_is_dense() const;
  inline void clear_is_dense();
  static const int kIsDenseFieldNumber = 3;
  inline bool is_dense() const;
  inline void set_is_dense(bool value);

  // repeated .pcl.msgs.PointXYZL points = 4;
  inline int points_size() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 4;
  inline const ::pcl::msgs::PointXYZL& points(int index) const;
  inline ::pcl::msgs::PointXYZL* mutable_points(int index);
  inline ::pcl::msgs::PointXYZL* add_points();
  inline const ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZL >&
      points() const;
  inline ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZL >*
      mutable_points();

  // @@protoc_insertion_point(class_scope:pcl.msgs.PointCloudXYZL)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_is_dense();
  inline void clear_has_is_dense();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZL > points_;
  bool is_dense_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_point_5fcloud_2eproto();
  friend void protobuf_AssignDesc_point_5fcloud_2eproto();
  friend void protobuf_ShutdownFile_point_5fcloud_2eproto();

  void InitAsDefaultInstance();
  static PointCloudXYZL* default_instance_;
};
// ===================================================================


// ===================================================================

// PointCloud

// required uint32 width = 1;
inline bool PointCloud::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointCloud::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointCloud::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointCloud::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 PointCloud::width() const {
  return width_;
}
inline void PointCloud::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
}

// required uint32 height = 2;
inline bool PointCloud::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointCloud::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointCloud::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointCloud::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 PointCloud::height() const {
  return height_;
}
inline void PointCloud::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
}

// required bool is_dense = 3;
inline bool PointCloud::has_is_dense() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointCloud::set_has_is_dense() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointCloud::clear_has_is_dense() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointCloud::clear_is_dense() {
  is_dense_ = false;
  clear_has_is_dense();
}
inline bool PointCloud::is_dense() const {
  return is_dense_;
}
inline void PointCloud::set_is_dense(bool value) {
  set_has_is_dense();
  is_dense_ = value;
}

// repeated .pcl.msgs.PointXYZ points = 4;
inline int PointCloud::points_size() const {
  return points_.size();
}
inline void PointCloud::clear_points() {
  points_.Clear();
}
inline const ::pcl::msgs::PointXYZ& PointCloud::points(int index) const {
  return points_.Get(index);
}
inline ::pcl::msgs::PointXYZ* PointCloud::mutable_points(int index) {
  return points_.Mutable(index);
}
inline ::pcl::msgs::PointXYZ* PointCloud::add_points() {
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZ >&
PointCloud::points() const {
  return points_;
}
inline ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZ >*
PointCloud::mutable_points() {
  return &points_;
}

// -------------------------------------------------------------------

// PointCloudXYZL

// required uint32 width = 1;
inline bool PointCloudXYZL::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointCloudXYZL::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointCloudXYZL::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointCloudXYZL::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 PointCloudXYZL::width() const {
  return width_;
}
inline void PointCloudXYZL::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
}

// required uint32 height = 2;
inline bool PointCloudXYZL::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointCloudXYZL::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointCloudXYZL::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointCloudXYZL::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 PointCloudXYZL::height() const {
  return height_;
}
inline void PointCloudXYZL::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
}

// required bool is_dense = 3;
inline bool PointCloudXYZL::has_is_dense() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointCloudXYZL::set_has_is_dense() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointCloudXYZL::clear_has_is_dense() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointCloudXYZL::clear_is_dense() {
  is_dense_ = false;
  clear_has_is_dense();
}
inline bool PointCloudXYZL::is_dense() const {
  return is_dense_;
}
inline void PointCloudXYZL::set_is_dense(bool value) {
  set_has_is_dense();
  is_dense_ = value;
}

// repeated .pcl.msgs.PointXYZL points = 4;
inline int PointCloudXYZL::points_size() const {
  return points_.size();
}
inline void PointCloudXYZL::clear_points() {
  points_.Clear();
}
inline const ::pcl::msgs::PointXYZL& PointCloudXYZL::points(int index) const {
  return points_.Get(index);
}
inline ::pcl::msgs::PointXYZL* PointCloudXYZL::mutable_points(int index) {
  return points_.Mutable(index);
}
inline ::pcl::msgs::PointXYZL* PointCloudXYZL::add_points() {
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZL >&
PointCloudXYZL::points() const {
  return points_;
}
inline ::google::protobuf::RepeatedPtrField< ::pcl::msgs::PointXYZL >*
PointCloudXYZL::mutable_points() {
  return &points_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace pcl

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_point_5fcloud_2eproto__INCLUDED
