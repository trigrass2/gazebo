// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pose_estimation_result.proto

#ifndef PROTOBUF_pose_5festimation_5fresult_2eproto__INCLUDED
#define PROTOBUF_pose_5festimation_5fresult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace my {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pose_5festimation_5fresult_2eproto();
void protobuf_AssignDesc_pose_5festimation_5fresult_2eproto();
void protobuf_ShutdownFile_pose_5festimation_5fresult_2eproto();

class PoseEstimationResult;

// ===================================================================

class PoseEstimationResult : public ::google::protobuf::Message {
 public:
  PoseEstimationResult();
  virtual ~PoseEstimationResult();

  PoseEstimationResult(const PoseEstimationResult& from);

  inline PoseEstimationResult& operator=(const PoseEstimationResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoseEstimationResult& default_instance();

  void Swap(PoseEstimationResult* other);

  // implements Message ----------------------------------------------

  PoseEstimationResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PoseEstimationResult& from);
  void MergeFrom(const PoseEstimationResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string object_name = 1;
  inline bool has_object_name() const;
  inline void clear_object_name();
  static const int kObjectNameFieldNumber = 1;
  inline const ::std::string& object_name() const;
  inline void set_object_name(const ::std::string& value);
  inline void set_object_name(const char* value);
  inline void set_object_name(const char* value, size_t size);
  inline ::std::string* mutable_object_name();
  inline ::std::string* release_object_name();
  inline void set_allocated_object_name(::std::string* object_name);

  // repeated float pose_matrix4 = 2 [packed = true];
  inline int pose_matrix4_size() const;
  inline void clear_pose_matrix4();
  static const int kPoseMatrix4FieldNumber = 2;
  inline float pose_matrix4(int index) const;
  inline void set_pose_matrix4(int index, float value);
  inline void add_pose_matrix4(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      pose_matrix4() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_pose_matrix4();

  // @@protoc_insertion_point(class_scope:my.msgs.PoseEstimationResult)
 private:
  inline void set_has_object_name();
  inline void clear_has_object_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* object_name_;
  ::google::protobuf::RepeatedField< float > pose_matrix4_;
  mutable int _pose_matrix4_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pose_5festimation_5fresult_2eproto();
  friend void protobuf_AssignDesc_pose_5festimation_5fresult_2eproto();
  friend void protobuf_ShutdownFile_pose_5festimation_5fresult_2eproto();

  void InitAsDefaultInstance();
  static PoseEstimationResult* default_instance_;
};
// ===================================================================


// ===================================================================

// PoseEstimationResult

// required string object_name = 1;
inline bool PoseEstimationResult::has_object_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoseEstimationResult::set_has_object_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoseEstimationResult::clear_has_object_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoseEstimationResult::clear_object_name() {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    object_name_->clear();
  }
  clear_has_object_name();
}
inline const ::std::string& PoseEstimationResult::object_name() const {
  return *object_name_;
}
inline void PoseEstimationResult::set_object_name(const ::std::string& value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void PoseEstimationResult::set_object_name(const char* value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void PoseEstimationResult::set_object_name(const char* value, size_t size) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PoseEstimationResult::mutable_object_name() {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  return object_name_;
}
inline ::std::string* PoseEstimationResult::release_object_name() {
  clear_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_name_;
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PoseEstimationResult::set_allocated_object_name(::std::string* object_name) {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    delete object_name_;
  }
  if (object_name) {
    set_has_object_name();
    object_name_ = object_name;
  } else {
    clear_has_object_name();
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated float pose_matrix4 = 2 [packed = true];
inline int PoseEstimationResult::pose_matrix4_size() const {
  return pose_matrix4_.size();
}
inline void PoseEstimationResult::clear_pose_matrix4() {
  pose_matrix4_.Clear();
}
inline float PoseEstimationResult::pose_matrix4(int index) const {
  return pose_matrix4_.Get(index);
}
inline void PoseEstimationResult::set_pose_matrix4(int index, float value) {
  pose_matrix4_.Set(index, value);
}
inline void PoseEstimationResult::add_pose_matrix4(float value) {
  pose_matrix4_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
PoseEstimationResult::pose_matrix4() const {
  return pose_matrix4_;
}
inline ::google::protobuf::RepeatedField< float >*
PoseEstimationResult::mutable_pose_matrix4() {
  return &pose_matrix4_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace my

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pose_5festimation_5fresult_2eproto__INCLUDED
